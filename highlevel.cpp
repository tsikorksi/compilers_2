#include "highlevel.h"

// Generated high-level opcodes (support functions/classes)
// Do not edit this file!

const char *highlevel_opcode_to_str(HighLevelOpcode opcode) {
  switch (opcode) {
  case HINS_nop:        return "nop";
  case HINS_add_b:      return "add_b";
  case HINS_add_w:      return "add_w";
  case HINS_add_l:      return "add_l";
  case HINS_add_q:      return "add_q";
  case HINS_sub_b:      return "sub_b";
  case HINS_sub_w:      return "sub_w";
  case HINS_sub_l:      return "sub_l";
  case HINS_sub_q:      return "sub_q";
  case HINS_mul_b:      return "mul_b";
  case HINS_mul_w:      return "mul_w";
  case HINS_mul_l:      return "mul_l";
  case HINS_mul_q:      return "mul_q";
  case HINS_div_b:      return "div_b";
  case HINS_div_w:      return "div_w";
  case HINS_div_l:      return "div_l";
  case HINS_div_q:      return "div_q";
  case HINS_mod_b:      return "mod_b";
  case HINS_mod_w:      return "mod_w";
  case HINS_mod_l:      return "mod_l";
  case HINS_mod_q:      return "mod_q";
  case HINS_lshift_b:   return "lshift_b";
  case HINS_lshift_w:   return "lshift_w";
  case HINS_lshift_l:   return "lshift_l";
  case HINS_lshift_q:   return "lshift_q";
  case HINS_rshift_b:   return "rshift_b";
  case HINS_rshift_w:   return "rshift_w";
  case HINS_rshift_l:   return "rshift_l";
  case HINS_rshift_q:   return "rshift_q";
  case HINS_cmplt_b:    return "cmplt_b";
  case HINS_cmplt_w:    return "cmplt_w";
  case HINS_cmplt_l:    return "cmplt_l";
  case HINS_cmplt_q:    return "cmplt_q";
  case HINS_cmplte_b:   return "cmplte_b";
  case HINS_cmplte_w:   return "cmplte_w";
  case HINS_cmplte_l:   return "cmplte_l";
  case HINS_cmplte_q:   return "cmplte_q";
  case HINS_cmpgt_b:    return "cmpgt_b";
  case HINS_cmpgt_w:    return "cmpgt_w";
  case HINS_cmpgt_l:    return "cmpgt_l";
  case HINS_cmpgt_q:    return "cmpgt_q";
  case HINS_cmpgte_b:   return "cmpgte_b";
  case HINS_cmpgte_w:   return "cmpgte_w";
  case HINS_cmpgte_l:   return "cmpgte_l";
  case HINS_cmpgte_q:   return "cmpgte_q";
  case HINS_cmpeq_b:    return "cmpeq_b";
  case HINS_cmpeq_w:    return "cmpeq_w";
  case HINS_cmpeq_l:    return "cmpeq_l";
  case HINS_cmpeq_q:    return "cmpeq_q";
  case HINS_cmpneq_b:   return "cmpneq_b";
  case HINS_cmpneq_w:   return "cmpneq_w";
  case HINS_cmpneq_l:   return "cmpneq_l";
  case HINS_cmpneq_q:   return "cmpneq_q";
  case HINS_and_b:      return "and_b";
  case HINS_and_w:      return "and_w";
  case HINS_and_l:      return "and_l";
  case HINS_and_q:      return "and_q";
  case HINS_or_b:       return "or_b";
  case HINS_or_w:       return "or_w";
  case HINS_or_l:       return "or_l";
  case HINS_or_q:       return "or_q";
  case HINS_xor_b:      return "xor_b";
  case HINS_xor_w:      return "xor_w";
  case HINS_xor_l:      return "xor_l";
  case HINS_xor_q:      return "xor_q";
  case HINS_neg_b:      return "neg_b";
  case HINS_neg_w:      return "neg_w";
  case HINS_neg_l:      return "neg_l";
  case HINS_neg_q:      return "neg_q";
  case HINS_not_b:      return "not_b";
  case HINS_not_w:      return "not_w";
  case HINS_not_l:      return "not_l";
  case HINS_not_q:      return "not_q";
  case HINS_compl_b:    return "compl_b";
  case HINS_compl_w:    return "compl_w";
  case HINS_compl_l:    return "compl_l";
  case HINS_compl_q:    return "compl_q";
  case HINS_inc_b:      return "inc_b";
  case HINS_inc_w:      return "inc_w";
  case HINS_inc_l:      return "inc_l";
  case HINS_inc_q:      return "inc_q";
  case HINS_dec_b:      return "dec_b";
  case HINS_dec_w:      return "dec_w";
  case HINS_dec_l:      return "dec_l";
  case HINS_dec_q:      return "dec_q";
  case HINS_mov_b:      return "mov_b";
  case HINS_mov_w:      return "mov_w";
  case HINS_mov_l:      return "mov_l";
  case HINS_mov_q:      return "mov_q";
  case HINS_sconv_bw:   return "sconv_bw";
  case HINS_sconv_bl:   return "sconv_bl";
  case HINS_sconv_bq:   return "sconv_bq";
  case HINS_sconv_wl:   return "sconv_wl";
  case HINS_sconv_wq:   return "sconv_wq";
  case HINS_sconv_lq:   return "sconv_lq";
  case HINS_uconv_bw:   return "uconv_bw";
  case HINS_uconv_bl:   return "uconv_bl";
  case HINS_uconv_bq:   return "uconv_bq";
  case HINS_uconv_wl:   return "uconv_wl";
  case HINS_uconv_wq:   return "uconv_wq";
  case HINS_uconv_lq:   return "uconv_lq";
  case HINS_ret:        return "ret";
  case HINS_jmp:        return "jmp";
  case HINS_call:       return "call";
  case HINS_enter:      return "enter";
  case HINS_leave:      return "leave";
  case HINS_localaddr:  return "localaddr";
  case HINS_cjmp_t:     return "cjmp_t";
  case HINS_cjmp_f:     return "cjmp_f";
  default: return nullptr;
  } // end switch
} // end opcode_to_str function

int highlevel_opcode_get_source_operand_size(HighLevelOpcode opcode) {
  switch (opcode) {
  case HINS_nop: return 0;
  case HINS_add_b: return 1;
  case HINS_add_w: return 2;
  case HINS_add_l: return 4;
  case HINS_add_q: return 8;
  case HINS_sub_b: return 1;
  case HINS_sub_w: return 2;
  case HINS_sub_l: return 4;
  case HINS_sub_q: return 8;
  case HINS_mul_b: return 1;
  case HINS_mul_w: return 2;
  case HINS_mul_l: return 4;
  case HINS_mul_q: return 8;
  case HINS_div_b: return 1;
  case HINS_div_w: return 2;
  case HINS_div_l: return 4;
  case HINS_div_q: return 8;
  case HINS_mod_b: return 1;
  case HINS_mod_w: return 2;
  case HINS_mod_l: return 4;
  case HINS_mod_q: return 8;
  case HINS_lshift_b: return 1;
  case HINS_lshift_w: return 2;
  case HINS_lshift_l: return 4;
  case HINS_lshift_q: return 8;
  case HINS_rshift_b: return 1;
  case HINS_rshift_w: return 2;
  case HINS_rshift_l: return 4;
  case HINS_rshift_q: return 8;
  case HINS_cmplt_b: return 1;
  case HINS_cmplt_w: return 2;
  case HINS_cmplt_l: return 4;
  case HINS_cmplt_q: return 8;
  case HINS_cmplte_b: return 1;
  case HINS_cmplte_w: return 2;
  case HINS_cmplte_l: return 4;
  case HINS_cmplte_q: return 8;
  case HINS_cmpgt_b: return 1;
  case HINS_cmpgt_w: return 2;
  case HINS_cmpgt_l: return 4;
  case HINS_cmpgt_q: return 8;
  case HINS_cmpgte_b: return 1;
  case HINS_cmpgte_w: return 2;
  case HINS_cmpgte_l: return 4;
  case HINS_cmpgte_q: return 8;
  case HINS_cmpeq_b: return 1;
  case HINS_cmpeq_w: return 2;
  case HINS_cmpeq_l: return 4;
  case HINS_cmpeq_q: return 8;
  case HINS_cmpneq_b: return 1;
  case HINS_cmpneq_w: return 2;
  case HINS_cmpneq_l: return 4;
  case HINS_cmpneq_q: return 8;
  case HINS_and_b: return 1;
  case HINS_and_w: return 2;
  case HINS_and_l: return 4;
  case HINS_and_q: return 8;
  case HINS_or_b: return 1;
  case HINS_or_w: return 2;
  case HINS_or_l: return 4;
  case HINS_or_q: return 8;
  case HINS_xor_b: return 1;
  case HINS_xor_w: return 2;
  case HINS_xor_l: return 4;
  case HINS_xor_q: return 8;
  case HINS_neg_b: return 1;
  case HINS_neg_w: return 2;
  case HINS_neg_l: return 4;
  case HINS_neg_q: return 8;
  case HINS_not_b: return 1;
  case HINS_not_w: return 2;
  case HINS_not_l: return 4;
  case HINS_not_q: return 8;
  case HINS_compl_b: return 1;
  case HINS_compl_w: return 2;
  case HINS_compl_l: return 4;
  case HINS_compl_q: return 8;
  case HINS_inc_b: return 1;
  case HINS_inc_w: return 2;
  case HINS_inc_l: return 4;
  case HINS_inc_q: return 8;
  case HINS_dec_b: return 1;
  case HINS_dec_w: return 2;
  case HINS_dec_l: return 4;
  case HINS_dec_q: return 8;
  case HINS_mov_b: return 1;
  case HINS_mov_w: return 2;
  case HINS_mov_l: return 4;
  case HINS_mov_q: return 8;
  case HINS_sconv_bw: return 1;
  case HINS_sconv_bl: return 1;
  case HINS_sconv_bq: return 1;
  case HINS_sconv_wl: return 2;
  case HINS_sconv_wq: return 2;
  case HINS_sconv_lq: return 4;
  case HINS_uconv_bw: return 1;
  case HINS_uconv_bl: return 1;
  case HINS_uconv_bq: return 1;
  case HINS_uconv_wl: return 2;
  case HINS_uconv_wq: return 2;
  case HINS_uconv_lq: return 4;
  case HINS_ret: return 0;
  case HINS_jmp: return 0;
  case HINS_call: return 0;
  case HINS_enter: return 0;
  case HINS_leave: return 0;
  case HINS_localaddr: return 0;
  case HINS_cjmp_t: return 0;
  case HINS_cjmp_f: return 0;
  default: return 0;
  }
}

int highlevel_opcode_get_dest_operand_size(HighLevelOpcode opcode) {
  switch (opcode) {
  case HINS_nop: return 0;
  case HINS_add_b: return 1;
  case HINS_add_w: return 2;
  case HINS_add_l: return 4;
  case HINS_add_q: return 8;
  case HINS_sub_b: return 1;
  case HINS_sub_w: return 2;
  case HINS_sub_l: return 4;
  case HINS_sub_q: return 8;
  case HINS_mul_b: return 1;
  case HINS_mul_w: return 2;
  case HINS_mul_l: return 4;
  case HINS_mul_q: return 8;
  case HINS_div_b: return 1;
  case HINS_div_w: return 2;
  case HINS_div_l: return 4;
  case HINS_div_q: return 8;
  case HINS_mod_b: return 1;
  case HINS_mod_w: return 2;
  case HINS_mod_l: return 4;
  case HINS_mod_q: return 8;
  case HINS_lshift_b: return 1;
  case HINS_lshift_w: return 2;
  case HINS_lshift_l: return 4;
  case HINS_lshift_q: return 8;
  case HINS_rshift_b: return 1;
  case HINS_rshift_w: return 2;
  case HINS_rshift_l: return 4;
  case HINS_rshift_q: return 8;
  case HINS_cmplt_b: return 1;
  case HINS_cmplt_w: return 2;
  case HINS_cmplt_l: return 4;
  case HINS_cmplt_q: return 8;
  case HINS_cmplte_b: return 1;
  case HINS_cmplte_w: return 2;
  case HINS_cmplte_l: return 4;
  case HINS_cmplte_q: return 8;
  case HINS_cmpgt_b: return 1;
  case HINS_cmpgt_w: return 2;
  case HINS_cmpgt_l: return 4;
  case HINS_cmpgt_q: return 8;
  case HINS_cmpgte_b: return 1;
  case HINS_cmpgte_w: return 2;
  case HINS_cmpgte_l: return 4;
  case HINS_cmpgte_q: return 8;
  case HINS_cmpeq_b: return 1;
  case HINS_cmpeq_w: return 2;
  case HINS_cmpeq_l: return 4;
  case HINS_cmpeq_q: return 8;
  case HINS_cmpneq_b: return 1;
  case HINS_cmpneq_w: return 2;
  case HINS_cmpneq_l: return 4;
  case HINS_cmpneq_q: return 8;
  case HINS_and_b: return 1;
  case HINS_and_w: return 2;
  case HINS_and_l: return 4;
  case HINS_and_q: return 8;
  case HINS_or_b: return 1;
  case HINS_or_w: return 2;
  case HINS_or_l: return 4;
  case HINS_or_q: return 8;
  case HINS_xor_b: return 1;
  case HINS_xor_w: return 2;
  case HINS_xor_l: return 4;
  case HINS_xor_q: return 8;
  case HINS_neg_b: return 1;
  case HINS_neg_w: return 2;
  case HINS_neg_l: return 4;
  case HINS_neg_q: return 8;
  case HINS_not_b: return 1;
  case HINS_not_w: return 2;
  case HINS_not_l: return 4;
  case HINS_not_q: return 8;
  case HINS_compl_b: return 1;
  case HINS_compl_w: return 2;
  case HINS_compl_l: return 4;
  case HINS_compl_q: return 8;
  case HINS_inc_b: return 1;
  case HINS_inc_w: return 2;
  case HINS_inc_l: return 4;
  case HINS_inc_q: return 8;
  case HINS_dec_b: return 1;
  case HINS_dec_w: return 2;
  case HINS_dec_l: return 4;
  case HINS_dec_q: return 8;
  case HINS_mov_b: return 1;
  case HINS_mov_w: return 2;
  case HINS_mov_l: return 4;
  case HINS_mov_q: return 8;
  case HINS_sconv_bw: return 2;
  case HINS_sconv_bl: return 4;
  case HINS_sconv_bq: return 8;
  case HINS_sconv_wl: return 4;
  case HINS_sconv_wq: return 8;
  case HINS_sconv_lq: return 8;
  case HINS_uconv_bw: return 2;
  case HINS_uconv_bl: return 4;
  case HINS_uconv_bq: return 8;
  case HINS_uconv_wl: return 4;
  case HINS_uconv_wq: return 8;
  case HINS_uconv_lq: return 8;
  case HINS_ret: return 0;
  case HINS_jmp: return 0;
  case HINS_call: return 0;
  case HINS_enter: return 0;
  case HINS_leave: return 0;
  case HINS_localaddr: return 0;
  case HINS_cjmp_t: return 0;
  case HINS_cjmp_f: return 0;
  default: return 0;
  }
}
